{
  "_args": [
    [
      {
        "raw": "ip-filter@https://registry.npmjs.org/ip-filter/-/ip-filter-1.0.2.tgz",
        "scope": null,
        "escapedName": "ip-filter",
        "name": "ip-filter",
        "rawSpec": "https://registry.npmjs.org/ip-filter/-/ip-filter-1.0.2.tgz",
        "spec": "https://registry.npmjs.org/ip-filter/-/ip-filter-1.0.2.tgz",
        "type": "remote"
      },
      "/Users/jesse/Dev/meteor/packages/force-ssl-common/.npm/package-new-1imq4ga"
    ]
  ],
  "_from": "ip-filter@>=1.0.0 <2.0.0",
  "_id": "ip-filter@1.0.2",
  "_inCache": true,
  "_location": "/ip-filter",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ip-filter@https://registry.npmjs.org/ip-filter/-/ip-filter-1.0.2.tgz",
    "scope": null,
    "escapedName": "ip-filter",
    "name": "ip-filter",
    "rawSpec": "https://registry.npmjs.org/ip-filter/-/ip-filter-1.0.2.tgz",
    "spec": "https://registry.npmjs.org/ip-filter/-/ip-filter-1.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/forwarded-http"
  ],
  "_resolved": "https://registry.npmjs.org/ip-filter/-/ip-filter-1.0.2.tgz",
  "_shasum": "e702f9288ec58d183806c34734887ea06d79de47",
  "_shrinkwrap": null,
  "_spec": "ip-filter@https://registry.npmjs.org/ip-filter/-/ip-filter-1.0.2.tgz",
  "_where": "/Users/jesse/Dev/meteor/packages/force-ssl-common/.npm/package-new-1imq4ga",
  "author": {
    "name": "Charlike Mike Reagent",
    "email": "@tunnckoCore",
    "url": "http://www.tunnckocore.tk"
  },
  "bugs": {
    "url": "https://github.com/tunnckoCore/ip-filter/issues"
  },
  "dependencies": {
    "ip-regex": "^1.0.3",
    "is-match": "^0.4.0",
    "to-file-path": "^1.0.0"
  },
  "description": "Filters valid IPv4 or IPv6 against glob pattern, array, string and etc. If match returns passed `ip`, otherwise null is returned. Have no strict mode to check no IP values.",
  "devDependencies": {
    "assertit": "^0.1.0",
    "pre-commit": "*"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/tunnckoCore/ip-filter#readme",
  "keywords": [
    "array",
    "check",
    "filter",
    "glob",
    "ip",
    "ip-filter",
    "ips",
    "ipv",
    "ismatch",
    "match",
    "matcher",
    "micro",
    "micromatch",
    "modern",
    "patterns",
    "regexp",
    "string",
    "valid",
    "validate"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "ip-filter",
  "optionalDependencies": {},
  "precommit.silent": true,
  "readme": "# [ip-filter][author-www-url] [![npmjs.com][npmjs-img]][npmjs-url] [![The MIT License][license-img]][license-url] \n\n> Filters valid IPv4 or IPv6 against glob pattern, array, string and etc. If match returns passed `ip`, otherwise null is returned. Have no strict mode to check no IP values.\n\n[![code climate][codeclimate-img]][codeclimate-url] [![standard code style][standard-img]][standard-url] [![travis build status][travis-img]][travis-url] [![coverage status][coveralls-img]][coveralls-url] [![dependency status][david-img]][david-url]\n\nYou might also be interested in [to-object-path][], [to-file-path][] or [koa-ip-filter][].\n\n## Install\n```\nnpm i ip-filter --save\n```\n\n## Usage\n> For more use-cases see the [tests](./test.js)\n\n```js\nconst ipFilter = require('ip-filter')\n```\n\n### [ipFilter](index.js#L39)\n> Filter `ip` against glob `patterns`.\n\n**Params**\n\n* `ip` **{String}**    \n* `patterns` **{String|Array|RegExp|Function|Object}**: Basically everything that [is-match][] can accept.    \n* `noStrict` **{Boolean}**: Pass `true` if want to validate non-ip values.    \n* `returns` **{String|null}**: If not match returns `null`, otherwise the passed `ip`.  \n\n**Example**\n\n```js\nvar ipFilter = require('ip-filter')\n\nconsole.log(ipFilter('123.77.34.89', '123.??.34.8*')) // => '123.77.34.89'\nconsole.log(ipFilter('123.222.34.88', '123.??.34.8*')) // => null\nconsole.log(ipFilter('123.222.34.88', ['123.*.34.*', '!123.222.*'])) // => null\nconsole.log(ipFilter('123.222.33.1', ['123.*.34.*', '*.222.33.*'])) // => '123.222.33.1'\n\n// no strict mode\nconsole.log(ipFilter('x-koaip', ['*-koaip', '!foo-koa*'], true)) // => 'x-koaip'\nconsole.log(ipFilter('x-koa.foo', ['*-koa.*', '!foo-koa.*'], true)) // => 'x-koa.foo'\n```\n\n## Related\n* [ip-regex](https://www.npmjs.com/package/ip-regex): Regular expression for matching IP addresses | [homepage](https://github.com/sindresorhus/ip-regex)\n* [is-match](https://www.npmjs.com/package/is-match): Create a matching function from a glob pattern, regex, string, array,… [more](https://www.npmjs.com/package/is-match) | [homepage](https://github.com/jonschlinkert/is-match)\n* [koa-ip-filter](https://www.npmjs.com/package/koa-ip-filter): koa middleware to filter request IPs or custom ID with glob… [more](https://www.npmjs.com/package/koa-ip-filter) | [homepage](https://github.com/tunnckocore/koa-ip-filter)\n* [micromatch](https://www.npmjs.com/package/micromatch): Glob matching for javascript/node.js. A drop-in replacement and faster alternative to… [more](https://www.npmjs.com/package/micromatch) | [homepage](https://github.com/jonschlinkert/micromatch)\n* [to-file-path](https://www.npmjs.com/package/to-file-path): Create a filepath from an object path (dot notation), list of… [more](https://www.npmjs.com/package/to-file-path) | [homepage](https://github.com/tunnckocore/to-file-path)\n\n## Contributing\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/tunnckoCore/ip-filter/issues/new).  \nBut before doing anything, please read the [CONTRIBUTING.md](./CONTRIBUTING.md) guidelines.\n\n## [Charlike Make Reagent](http://j.mp/1stW47C) [![new message to charlike][new-message-img]][new-message-url] [![freenode #charlike][freenode-img]][freenode-url]\n\n[![tunnckoCore.tk][author-www-img]][author-www-url] [![keybase tunnckoCore][keybase-img]][keybase-url] [![tunnckoCore npm][author-npm-img]][author-npm-url] [![tunnckoCore twitter][author-twitter-img]][author-twitter-url] [![tunnckoCore github][author-github-img]][author-github-url]\n\n[is-match]: https://github.com/jonschlinkert/is-match\n[to-object-path]: https://github.com/jonschlinkert/to-object-path\n[koa-ip-filter]: https://github.com/tunnckocore/koa-ip-filter\n[to-file-path]: https://github.com/tunnckocore/to-file-path\n\n[npmjs-url]: https://www.npmjs.com/package/ip-filter\n[npmjs-img]: https://img.shields.io/npm/v/ip-filter.svg?label=ip-filter\n\n[license-url]: https://github.com/tunnckoCore/ip-filter/blob/master/LICENSE\n[license-img]: https://img.shields.io/badge/license-MIT-blue.svg\n\n[codeclimate-url]: https://codeclimate.com/github/tunnckoCore/ip-filter\n[codeclimate-img]: https://img.shields.io/codeclimate/github/tunnckoCore/ip-filter.svg\n\n[travis-url]: https://travis-ci.org/tunnckoCore/ip-filter\n[travis-img]: https://img.shields.io/travis/tunnckoCore/ip-filter/master.svg\n\n[coveralls-url]: https://coveralls.io/r/tunnckoCore/ip-filter\n[coveralls-img]: https://img.shields.io/coveralls/tunnckoCore/ip-filter.svg\n\n[david-url]: https://david-dm.org/tunnckoCore/ip-filter\n[david-img]: https://img.shields.io/david/tunnckoCore/ip-filter.svg\n\n[standard-url]: https://github.com/feross/standard\n[standard-img]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg\n\n[author-www-url]: http://www.tunnckocore.tk\n[author-www-img]: https://img.shields.io/badge/www-tunnckocore.tk-fe7d37.svg\n\n[keybase-url]: https://keybase.io/tunnckocore\n[keybase-img]: https://img.shields.io/badge/keybase-tunnckocore-8a7967.svg\n\n[author-npm-url]: https://www.npmjs.com/~tunnckocore\n[author-npm-img]: https://img.shields.io/badge/npm-~tunnckocore-cb3837.svg\n\n[author-twitter-url]: https://twitter.com/tunnckoCore\n[author-twitter-img]: https://img.shields.io/badge/twitter-@tunnckoCore-55acee.svg\n\n[author-github-url]: https://github.com/tunnckoCore\n[author-github-img]: https://img.shields.io/badge/github-@tunnckoCore-4183c4.svg\n\n[freenode-url]: http://webchat.freenode.net/?channels=charlike\n[freenode-img]: https://img.shields.io/badge/freenode-%23charlike-5654a4.svg\n\n[new-message-url]: https://github.com/tunnckoCore/ama\n[new-message-img]: https://img.shields.io/badge/ask%20me-anything-green.svg\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tunnckoCore/ip-filter.git"
  },
  "scripts": {
    "test": "standard && node test.js"
  },
  "verb": {
    "run": true,
    "toc": false,
    "layout": "empty",
    "tasks": [
      "readme"
    ],
    "related": {
      "list": [
        "to-file-path",
        "ip-regex",
        "is-match",
        "micromatch",
        "koa-ip-filter"
      ]
    },
    "reflinks": [
      "is-match",
      "to-object-path",
      "koa-ip-filter",
      "to-file-path"
    ],
    "lint": {
      "reflinks": true
    }
  },
  "version": "1.0.2"
}
